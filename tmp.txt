This paper analyzes the impact on application performance of the design and implementation choices made in two widely used open-source schedulers: ULE, the default FreeBSD scheduler, and CFS, the default Linux scheduler.We compare ULE and CFS in otherwise identical circumstances.ULE may cause starvation, even when executing a single application with identical threads, but this starvation may actually lead to better application performance for some workloads.Operating system kernel schedulers is responsible for maintaining high utilization of hardware resources  while providing faster response time to latency-sensitive applications.To isolate the effect of differences between CFS and ULE, we have ported ULE to Linux, and we use it as the default scheduler to run all threads on the machine.Section 7 presents related work and Section 8 concludes